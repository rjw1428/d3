<!DOCTYPE html>
<meta charset="utf-8">

<body>
	<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
		integrity="sha256-pasqAKBDmFT4eHoN2ndd6lN370kFiGUFyTiUHWhU7k8=" crossorigin="anonymous"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
		integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous">
	</script>
	<script src="https://d3js.org/d3-array.v1.min.js"></script>
	<script src="https://d3js.org/d3-collection.v1.min.js"></script>
	<script src="https://d3js.org/d3-dispatch.v1.min.js"></script>
	<script src="https://d3js.org/d3-quadtree.v1.min.js"></script>
	<script src="https://d3js.org/d3-selection.v1.min.js"></script>
	<script src="https://d3js.org/d3-timer.v1.min.js"></script>
	<script src="https://d3js.org/d3-force.v1.min.js"></script>

	<div class="container">
		<div class="row">
			<div id="chart-area"></div>
		</div>
	</div>

	<script>
		d3.select("#chart-area").append('svg').attr('height', 500).attr('width', 960).attr('viewBox', "-480 -250 960 500")
		var width = d3.select("svg").attr("width")
		var height = d3.select("svg").attr("height")
		var radius1 = 50
		var radius2 = 100

		var nodes = [].concat(
			d3.range(80).map(function () {
				return {
					type: "a",
					x: Math.random() < 0.5 ? Math.random() * width / 2 : -Math.random() * width / 2,
					y: Math.random() < 0.5 ? Math.random() * height / 2 : -Math.random() * height / 2
				};
			}),
			d3.range(160).map(function () {
				return {
					type: "b",
					x: Math.random() < 0.5 ? Math.random() * width / 2 : -Math.random() * width / 2,
					y: Math.random() < 0.5 ? Math.random() * height / 2 : -Math.random() * height / 2
				};
			})
		);

		var center = d3.select("svg")
			.append("circle")
			.attr('cx', 0)
			.attr('cy', 0)
			.attr('r', 5)
			.attr('fill', 'none')
			.attr('stroke', 'black')

		d3.select("svg")
			.append("line")
			.attr('x1', 0)
			.attr('x2', 0)
			.attr('y1', -500)
			.attr('y2', 500)
			.attr('stroke', 'black')

		d3.select("svg")
			.append("line")
			.attr('x1', -500)
			.attr('x2', 500)
			.attr('y1', 0)
			.attr('y2', 0)
			.attr('stroke', 'black')

		var node = d3.select("svg")
			.append("g")
			.selectAll("circle")
			.data(nodes)
			.enter().append("circle")
			.attr("r", 2.5)
			.attr("fill", function (d) {
				return d.type === "a" ? "brown" : "steelblue";
			})

		var x_offset=200
		d3.select("svg")
			.append("circle")
			.attr('cx', x_offset)
			.attr('cy', 0)
			.attr('r', 5)
			.attr('fill', 'none')
			.attr('stroke', 'black')

		var simulation = d3.forceSimulation(nodes)
			.force("charge", d3.forceCollide().radius(5))
			.force("center", d3.forceCenter(x_offset, 0))
			.force("x", d3.forceX(x_offset*-1).strength(.05))
			// .force("y", d3.forceY(-50).strength(.05))
			.force("r", d3.forceRadial(function (d) {
				return d.type === "a" ? radius1 : radius2;
			}).x(x_offset).y(0))
			.on("tick", ticked);

		function ticked() {
			node
				.attr("cx", function (d) {
					return d.x;
				})
				.attr("cy", function (d) {
					return d.y;
				});
		}
	</script>

</body>
